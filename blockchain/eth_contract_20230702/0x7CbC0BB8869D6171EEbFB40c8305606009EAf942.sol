{{
  "language": "Solidity",
  "sources": {
    "1.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n//FUCK REDACTED\r\n//Did you get cucked by Redacted?  Here is your chance to make it all back.  To fight against tax and tyrenny.  Fuck them and their bullshit.\r\n//They never bought back.\r\n//Look at their shit chart.\r\n//telegram to talk shit: https://t.me/+a57z8h9EK2o2NjEx\r\n//Look at their chart below\r\n\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&#&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(#//@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(#//@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(#//@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(#//@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(#//@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(#//@&@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@#(&((@@@@@&(#//@%@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(@@@@@&(#//@%@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(@@@@@&(#//@(((/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(@@@@@&(#//@(((/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(@%@@@&(#//@(((/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&((%/(&%&&&&(#//&(((/&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(%#&%%&(#//@(((/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(#(%//&(#//@(((/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(#(%//&(#//@(((/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&((%/(#(%//&(#//&(((/&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%/(#(%//&(#@@@%@(/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@//&(#@@@%@(/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@//&(#@@@%@(/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@%@(/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@(/@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@(/@@@@#@@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@(/@@@@#@@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@//@#@@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@//@#@@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@#/%@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@#/%@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@#/%@@@%@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@#/%@@@%@@@@@@@@@%@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@#/%((%/(@@@@@@&@%@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&((%&&&&&&&&&&&&&&&&&&&&#/%((%/(&&&&&&&%(#((&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@@@@@&%/(@@@@@@&%((@&&/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%&@@@@@@@&@@@@@@@@@@@@@@@&%/(@@&#&((@@@@&&/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@&%/(@@#(%@@@@@@&&/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&((%&&&&&&&&&&&&&&&&&&&&&&&&&%/(&&#(%&&&&&&&&/(&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@%/(@&#(%@@@@@@&&/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@%/(((@@@@@@@@@&&/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@(/&@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@(/&@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@(/&@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@(/&@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@&&@%&(/%@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@&@(/%@@@@@@@@@@@@@@@@@@((%(#@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@&@@%@//@@@@@@@@@@@@@@#@((%/#@@@@@@@@@@@@@@@@&@%@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@&@@@@//@#@@@@@@@@@@@@#@((@@@(/#(&@@@@@@@@@@@&@%@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@//%(%//@@@@@@@@%(&((@@@@@&%&((@@@@@@@@@&@%@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@//%(%//@#%@@@@@#(&@@@@@@@@@@&&#/#@@@@@@&@%@@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@&@@@@@@(/&((@@@@@@@@@@@@@@@&&&((%((@@@@@@@@/(@&@@@@@@@@@@@@@@@@@@@@\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&((%%%&&&&&%#%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&#&//&&&&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@%%%%%%%%@@&%%@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@&%&((@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@@@@%%%%%%%%@@&%%@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@&&@##%(%%\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@&%%%%%%%%%%@@&%%@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@&%%%%%%%%%%@@&%%@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%@@&%%%%%%%%%%@@&%%%%&@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@((%%%%%&%%%%%%%%%%@@&%%%%&@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@%%&%%%%&%%%%%%%%%%%%&%%%%&@@%%%@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@%%&%%%%&%%%%%%%%%%%%&%%%%&%%%%%@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%&@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n//@@@@@@@@@@@@@@@@@@@@@@@@@@%%&%%%%&%%%%%%%%%%%%&%%%%&%%%%%@@@@@@@@@@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%&@@@@@@@@@@@@@@@@@&%%@@@@@@&@@@@@@@@@@@@@@@@@@@@\r\n\r\ncontract FCKREDACTED {\r\n    string public name = \"FUCK REDACTED\";\r\n    string public symbol = \"FCKRED\";\r\n    uint256 public totalSupply = 16_000_000* 10**18; \r\n    uint8 public decimals = 18;\r\n    uint256 public blockb;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    address public owner;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(_to != address(0));\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        require(allowance[_from][msg.sender] >= _value);\r\n        require(_to != address(0));\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function renounce() public onlyOwner {\r\n        emit OwnershipTransferred(owner, address(0));\r\n        owner = address(0);\r\n    }\r\n    \r\n    \r\n    function blockbots(uint256 bots) public onlyOwner {\r\n        blockb = bots;\r\n    }\r\n\r\n    function getbots() public view returns (uint256) {\r\n        return blockb;\r\n    }\r\n\r\n   \r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function.\");\r\n        _;\r\n    }\r\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "evm.bytecode",
          "evm.deployedBytecode",
          "devdoc",
          "userdoc",
          "metadata",
          "abi"
        ]
      }
    }
  }
}}